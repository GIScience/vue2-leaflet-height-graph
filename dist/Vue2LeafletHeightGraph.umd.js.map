{"version":3,"sources":["webpack://Vue2LeafletHeightGraph/webpack/universalModuleDefinition","webpack://Vue2LeafletHeightGraph/webpack/bootstrap","webpack://Vue2LeafletHeightGraph/external \"leaflet\"","webpack://Vue2LeafletHeightGraph/external \"current-script-polyfill\"","webpack://Vue2LeafletHeightGraph/external \"leaflet.heightgraph/dist/L.Control.Heightgraph.min.css\"","webpack://Vue2LeafletHeightGraph/external \"leaflet.heightgraph\"","webpack://Vue2LeafletHeightGraph/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://Vue2LeafletHeightGraph/./src/Vue2LeafletHeightGraph.vue?600a","webpack://Vue2LeafletHeightGraph/./src/utils/parser.js","webpack://Vue2LeafletHeightGraph/./src/size-props.js","webpack://Vue2LeafletHeightGraph/./src/vue2-leaflet-height-graph.js","webpack://Vue2LeafletHeightGraph/./src/vue2-leaflet-height-graph.js?4e37","webpack://Vue2LeafletHeightGraph/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://Vue2LeafletHeightGraph/./src/Vue2LeafletHeightGraph.vue","webpack://Vue2LeafletHeightGraph/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA,oC;;;;;;;ACAA,oD;;;;;;;ACAA,mF;;;;;;;ACAA,gD;;;;;;;;;;;;;;;;;;;ACAA;;AAEA;AACA,MAAM,IAAuC;AAC7C,IAAI,mBAAO,CAAC,MAAyB;AACrC;;AAEA;AACA;AACA,IAAI,qBAAuB;AAC3B;AACA;;AAEA;AACe,sDAAI;;;ACdnB,0BAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,aAAa,kBAAkB;AACzI;;;;;;ACDA;AACA;AACA;AACA;AACA,cAAc,WAAW,6BAA6B,6BAA6B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA,SAAS,YAAY,WAAW,yBAAyB,eAAe,gBAAgB,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;AC5Hc;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;ACT2C;AACf;AACO;AACR;AACmC;;AAEhD;AACf;AACA,WAAW,UAAS;AACpB;AACA;AACA;AACA,wBAAwB,sBAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB,0BAAO;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kDAAkD,0BAA0B,aAAa,UAAU;AACnG;AACA,O;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAA0D;AAC1F;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,OAAO;AACd;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,yBAAyB,aAAa;AACtC,gCAAgC,WAAW,EAAE,MAAM;AACnD;AACA;AACA;AACA,S;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gB;AACA;AACA;AACA,gB;AACA;AACA;AACA,gB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gCAAgC,0BAA0B;AAC1D,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,CAAC;;;ACnQ6H,CAAgB,2IAAG,EAAC,C;;ACAlJ;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AC5FqG;AACzB;AACL;;;AAGvE;AACuF;AACvF,gBAAgB,kBAAU;AAC1B,EAAE,qDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,4E;;AClBS;AACA;AACT,qGAAG;AACI","file":"Vue2LeafletHeightGraph.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vue2LeafletHeightGraph\"] = factory();\n\telse\n\t\troot[\"Vue2LeafletHeightGraph\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","module.exports = require(\"leaflet\");","module.exports = require(\"current-script-polyfill\");","module.exports = require(\"leaflet.heightgraph/dist/L.Control.Heightgraph.min.css\");","module.exports = require(\"leaflet.heightgraph\");","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    require('current-script-polyfill')\n  }\n\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"display\":\"none\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * Builds GeoJson Feature\n * @param extraSegment - segment with constant extra value\n * @param coordinates - coordinates array\n * @returns {{geometry: {coordinates: *, type: string}, type: string, properties: {attributeType: *}}}\n */\nconst buildFeature = (extraSegment, coordinates) => {\n    const [startIdx, endIdx, attributeType] = extraSegment\n    return {\n        type: \"Feature\",\n        geometry: {\n            type: \"LineString\",\n            coordinates: coordinates.slice(startIdx, endIdx + 1)\n        },\n        properties: {\n            attributeType: attributeType\n        }\n    }\n}\n\n/**\n * Builds GeoJson feature collection\n * @param features - all features for\n * @param extraKey\n * @returns {{features: *, type: string, properties: {summary: *}}}\n */\nconst buildFeatureCollection = (features, extraKey) => {\n    return {\n        type: 'FeatureCollection',\n        features: features,\n        properties: {\n            summary: extraKey\n        }\n    }\n}\n\n/**\n * Build leaflet.heightgraph data\n * @param extras - ors\n * @param coordinates - coordinates array\n * @returns {Array} height graph conformal data. See https://github.com/GIScience/Leaflet.Heightgraph#supported-data\n */\nconst buildCollections = (extras, coordinates) => {\n    let collections = []\n    Object.entries(extras)\n    .forEach(([extraKey, extraData]) => {\n        let features = []\n        for (let extraSegment of extraData.values) {\n            const feature = buildFeature(extraSegment, coordinates)\n            features.push(feature)\n        }\n        const featureCollection = buildFeatureCollection(features, extraKey)\n        collections.push(featureCollection)\n    })\n    return collections\n}\n\n/**\n * Adds the default attributeType property 'elevation' to Features if it doesn't exist.\n * @param feature\n */\nconst addAttributeTypeProperty = (feature) => {\n    feature.properties = feature.properties || {}\n    feature.properties.attributeType = feature.properties.attributeType || 'elevation'\n}\n\n/**\n *\n * @param orsResponse\n * @returns {Array} collections - height graph conformal data. See https://github.com/GIScience/Leaflet.Heightgraph#supported-data\n */\nexport function ors(orsResponse) {\n    let collections = null\n    let responseObject = typeof orsResponse === 'string' ? JSON.parse(orsResponse) : orsResponse\n    // extract coordinates and extras from ors response\n    let {features: [{geometry: {coordinates: coordinates}, properties: {extras: extras}}]} = responseObject\n    if (extras) {\n        collections = buildCollections(extras, coordinates)\n    }\n    return collections\n}\nexport function noParser(data) {\n    return data\n}\n\n/**\n * The geoJson parser should accept simple LineString geometries, Features and FeatureCollections.\n * It builds the Array of FeatureCollections containing the required 'summary' and 'attributeType' tags.\n * @param data - the geoJson object\n * @returns {Array}\n */\nexport function geoJson(data) {\n    // parse to object if necessary\n    data = typeof data === 'string' ? JSON.parse(data) : data\n    // transforms LineString data to Feature type\n    if (data.type === \"LineString\") {\n        data = buildFeature(\n            [\n                0,\n                data.coordinates.length - 1,\n                'elevation'\n            ],\n            data.coordinates\n        )\n    }\n    // transforms Feature data to FeatureCollection Type\n    if (data.type === \"Feature\") {\n        addAttributeTypeProperty(data)\n        data = buildFeatureCollection([data], 'elevation')\n    }\n    // transforms FeatureCollection to array of FeatureCollections\n    if (data.type === \"FeatureCollection\")\n        for (let feature of data.features) {\n            addAttributeTypeProperty(feature)\n        }\n        data.properties = data.properties || {}\n        data.properties.summary = data.properties.summary || 'elevation'\n    return [data]\n}\n\n// Template for a custom parser\n/*export function templateParser(yourInputData)\n     DO PARSING HERE\n     let heighGraphConformalData = parsing(yourInputData)\n     return heighGraphConformalData\n}*/\n","\nexport default {\n  props: [\n    'xs1', 'xs2', 'xs3','xs4','xs5','xs6', 'xs7', 'xs8', 'xs9', 'xs10', 'xs11', 'xs12',\n    'sm1', 'sm2', 'sm3','sm4','sm5','sm6', 'sm7', 'sm8', 'sm9', 'sm10', 'sm11', 'sm12',\n    'md1', 'md2', 'md3','md4','md5','md6', 'md7', 'md8', 'md9', 'md10', 'md11', 'md12',\n    'lg1', 'lg2', 'lg3','lg4','lg5','lg6', 'lg7', 'lg8', 'lg9', 'lg10', 'lg11', 'lg12',\n    'xl1', 'xl2', 'xl3','xl4','xl5','xl6', 'xl7', 'xl8', 'xl9', 'xl10', 'xl11', 'xl12',    \n  ],\n}\n","import * as parsers from \"./utils/parser.js\"\nimport Leaflet from 'leaflet'\nimport sizeProps from './size-props'\nimport 'leaflet.heightgraph'\nimport 'leaflet.heightgraph/dist/L.Control.Heightgraph.min.css'\n\nexport default {\n  name: 'l-control-height-graph',\n  mixins: [sizeProps],\n  data() {\n    return {\n      isOpen: false,\n      availableParsers: parsers,\n      hgInstance: null,\n      breakpointsOrder: ['xs', 'sm', 'md', 'lg', 'xl'],\n      defaultParser: 'geoJson',\n      defaultPosition: 'bottomright',\n      controlRef: null\n    }\n  },\n  components: {\n    ResizeObserver\n  },\n  props: {\n    position: {\n      type: String,\n      default: undefined\n    },\n    expand: {\n      type: Boolean,\n      default: undefined\n    },\n    data: {\n      type: [Object, Array],\n      default: () => []\n    },\n    options: {\n      type: Object,\n      default: () => {}\n    },\n    debug: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    leafletAcessor() {\n      let leaflet = Leaflet\n      return leaflet\n    },\n    optionsGetter () {\n      let options = this.options || {}\n      options.width = options.width || this.getWidth()\n      options.parser = options.parser || this.defaultParser\n      options.position = options.position || this.defaultPosition\n      return options\n    },\n    mapObject () {\n      const map = this.$parent.mapObject\n      return map\n    }\n  },\n  methods: {\n    /**\n     * Load the component, add the data, add the component to\n     * the map and set the close button watcher\n     */\n    loadData () {\n      const map = this.mapObject\n      let heightGraphOptions = this.buildHeightGraphOptions()\n      this.hgInstance = this.leafletAcessor.control.heightgraph(heightGraphOptions)\n      this.controlRef = this.hgInstance.addTo(map)\n      this.addData(this.data)\n      this.isOpen = true\n      this.watchCloseClick()\n    },\n    /**\n     * Add data to the component\n     * @param {Object} data \n     */\n    addData (data) {\n      try {\n        let p = Object.keys(this.availableParsers).includes(this.optionsGetter.parser) ? this.optionsGetter.parser : 'noParser'\n        this.hgInstance.addData(this.availableParsers[p](data))\n      } catch (e) {\n        let error = `Unable to parse data using ${this.optionsGetter.parser} parser \\n ${e.message}`\n        console.error(error)\n      }      \n    },\n    /**\n     * When the window size changes\n     * update the component size\n     */\n    updateSize () {\n      if (this.isOpen && this.hgInstance ) {\n        this.hgInstance.resize({width: this.getWidth(), height: this.optionsGetter.height})\n      }\n    },\n    /**\n     * Get the width that must be\n     * used to render the component\n     * @returns {Number}\n     */\n    getWidth () {\n      let breakpoint = this.getViewBreakpoint()\n      let sizePropValue = this.getSizePecentualValue(breakpoint)\n      let parentWidth = this.$el.parentNode.clientWidth\n      if (sizePropValue) {\n        let width = (parentWidth / 12) * sizePropValue\n        return width * 0.98 // make sure there is a little space on the sides\n      } else { // If no size was defined, use almos all the parent size\n        return parentWidth * 0.98 // make sure there is a little space on the sides\n      }\n    },\n    /**\n     * Get the size value considering the current\n     * breakpoint and the previous breakpoint available\n     * If there is no value for the current view breakpoint\n     * try to get the value for the previous breakpoint available\n     * Example: window size is medium, but only `sm8` and `lg8` view\n     * breakpoints size are defined, so the value for sm, in this case 2\n     * is returned as the percentile of the parent element that must be \n     * used as component width.\n     * @param {String} breakpoint \n     * @returns {Number} sizePropValue\n     */\n    getSizePecentualValue (breakpoint) {\n      // Find the passed size option      \n      let sizePropValue = this.getPropBreakpoitValue(breakpoint)\n      if (!sizePropValue) {\n        let currentBreakPointIndex = this.breakpointsOrder.indexOf(breakpoint) \n        let previousIndex = currentBreakPointIndex -1\n        if (this.breakpointsOrder[previousIndex]) {\n          breakpoint = this.breakpointsOrder[previousIndex]\n          sizePropValue = this.getSizePecentualValue(breakpoint)\n        }\n      }\n      return sizePropValue\n    },\n    /**\n     * Get the \n     * @param {String} breakpoint \n     * @returns {Number} sizePropValue\n     */\n    getPropBreakpoitValue (breakpoint) {\n      let sizePropValue = null\n      // go through every prop starting with\n      // the given breakpoint and get the\n      // value of this breakpoint value\n      // For example: md1 -> value = 1; lg2 => value = 2 etc\n      for (let index = 1; index <= 12; index++) {\n        let breakpointSize = `${breakpoint}${index}`\n        if (this.$props[breakpointSize] !== undefined) {\n          sizePropValue = index\n          break\n        }        \n      }\n      return sizePropValue\n    },\n    /**\n     * Get the current view breakpoint \n     * considering the innerWidth\n     * and the breakpoints defined \n     * by vuetify. @see https://dev.vuetifyjs.com/en/components/grids\n     * @returns {String} size\n     */\n    getViewBreakpoint () {\n      let size = ''\n      switch (true) {\n        case (window.innerWidth < 500):\n          size = 'xs'\n          break;\n        case (window.innerWidth > 600 && window.innerWidth < 960):\n          size = 'sm'\n          break; \n        case (window.innerWidth > 960 && window.innerWidth < 1264):\n          size = 'md'\n          break; \n        case (window.innerWidth > 1264):\n          size = 'xl'\n          break;      \n      }\n      return size\n    },\n    /**\n     * Build the options object expected by\n     * the leaflet.heightgraph library\n     * by merging vuejs component options\n     * @returns {Object}\n     */\n    buildHeightGraphOptions () {\n      let heightGraphOptions = {\n        ...this.optionsGetter, ...{\n          // merges quick settings with options if they are defined\n          ...(this.position && { position: this.position }),\n          ...(this.expand && { expand: this.expand })\n        }\n      }\n      return heightGraphOptions\n    },\n    /**\n     * Adds a onclick listener to the graph close\n     * button and emits a vuejs `closed` event when\n     * the button is clicked and the graph is closed\n     * Considering that the wrapped leaflet.heightgraph\n     * component is closed (and this wrapping component is kept)\n     * we also set the flag isOpen as false\n     * @emits closed\n     */\n    watchCloseClick () {\n      let context = this\n      // If there is a valid instance\n      // and it is open, then set the listener\n      if (this.hgInstance && this.isOpen) {\n        let elements = document.getElementsByClassName('heightgraph-close-icon')\n        // If the close btn is found\n        if (elements.length > 0) {\n          var closeAnchor = elements[0]\n          closeAnchor.onclick = () => {\n            context.hgInstance.remove()\n            context.isOpen = false\n            context.$emit('closed')\n          }\n        }\n      }\n    }\n  },\n  mounted() {\n    this.$nextTick(this.loadData)\n    window.addEventListener('resize', this.updateSize)\n  },\n  beforeDestroy() {\n    if (this.hgInstance) {\n      this.hgInstance.remove()\n      this.isOpen = false\n      this.controlRef = null\n    }\n  },\n  watch: {\n    data: {\n      handler: function (newVal) {\n        this.$nextTick(() => {\n          this.addData(newVal)\n        })\n      },\n      deep: true\n    },\n    'options': {\n      handler: function () {\n        this.mapObject.removeControl(this.controlRef)\n        let context = this\n\n        setTimeout(() => {\n          context.loadData()\n        }, 100)\n      },\n      deep: true\n    }\n  }\n}\n","import mod from \"-!../node_modules/eslint-loader/index.js??ref--12-0!./vue2-leaflet-height-graph.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/eslint-loader/index.js??ref--12-0!./vue2-leaflet-height-graph.js?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./Vue2LeafletHeightGraph.vue?vue&type=template&id=dc30bd84&\"\nimport script from \"./vue2-leaflet-height-graph.js?vue&type=script&lang=js&\"\nexport * from \"./vue2-leaflet-height-graph.js?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}